
2enkodera+indikacia.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  000007e2  00000876  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800152  00800152  000008c8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000938  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c11  00000000  00000000  00000990  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000085a  00000000  00000000  000015a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003f6  00000000  00000000  00001dfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  000021f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ad  00000000  00000000  00002334  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000041d  00000000  00000000  000027e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002bfe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	43 c0       	rjmp	.+134    	; 0x8e <__vector_3>
   8:	aa c0       	rjmp	.+340    	; 0x15e <__vector_4>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	e2 ee       	ldi	r30, 0xE2	; 226
  48:	f7 e0       	ldi	r31, 0x07	; 7
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a2 35       	cpi	r26, 0x52	; 82
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	21 e0       	ldi	r18, 0x01	; 1
  58:	a2 e5       	ldi	r26, 0x52	; 82
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	ae 36       	cpi	r26, 0x6E	; 110
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	74 d1       	rcall	.+744    	; 0x350 <main>
  68:	ba c3       	rjmp	.+1908   	; 0x7de <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <uart_putchar>:

static int uart_putchar(char c, FILE *stream);
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

static int uart_putchar(char c, FILE *stream)
{
  6c:	cf 93       	push	r28
  6e:	c8 2f       	mov	r28, r24
	if (c == '\n')
  70:	8a 30       	cpi	r24, 0x0A	; 10
  72:	11 f4       	brne	.+4      	; 0x78 <uart_putchar+0xc>
	uart_putchar('\r', stream);
  74:	8d e0       	ldi	r24, 0x0D	; 13
  76:	fa df       	rcall	.-12     	; 0x6c <uart_putchar>
	loop_until_bit_is_set(UCSR0A, UDRE0);
  78:	e0 ec       	ldi	r30, 0xC0	; 192
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	85 ff       	sbrs	r24, 5
  80:	fd cf       	rjmp	.-6      	; 0x7c <uart_putchar+0x10>
	UDR0 = c;
  82:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__EEPROM_REGION_LENGTH__+0x7f00c6>
	return 0;
}
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	cf 91       	pop	r28
  8c:	08 95       	ret

0000008e <__vector_3>:
/* контролирующем перемещение тележки  за 1 поворот  в мм */
volatile long peremeshenie=0; /*  в милиметрах*/


ISR(PCINT0_vect)// энкодер  угол отклонения маятника
{
  8e:	1f 92       	push	r1
  90:	0f 92       	push	r0
  92:	0f b6       	in	r0, 0x3f	; 63
  94:	0f 92       	push	r0
  96:	11 24       	eor	r1, r1
  98:	2f 93       	push	r18
  9a:	4f 93       	push	r20
  9c:	5f 93       	push	r21
  9e:	6f 93       	push	r22
  a0:	7f 93       	push	r23
  a2:	8f 93       	push	r24
  a4:	9f 93       	push	r25
  a6:	af 93       	push	r26
  a8:	bf 93       	push	r27
  aa:	ef 93       	push	r30
  ac:	ff 93       	push	r31


	int8_t AB1 = PINB & 3;
  ae:	23 b1       	in	r18, 0x03	; 3
  b0:	23 70       	andi	r18, 0x03	; 3
	//counter1 += increment[AB1 + ABprev1 *4];
	counter1 += increment[AB1 + ABprev1*4];
  b2:	e0 91 63 01 	lds	r30, 0x0163	; 0x800163 <ABprev1>
  b6:	40 91 64 01 	lds	r20, 0x0164	; 0x800164 <counter1>
  ba:	50 91 65 01 	lds	r21, 0x0165	; 0x800165 <counter1+0x1>
  be:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <counter1+0x2>
  c2:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <counter1+0x3>
  c6:	84 e0       	ldi	r24, 0x04	; 4
  c8:	e8 02       	muls	r30, r24
  ca:	f0 01       	movw	r30, r0
  cc:	11 24       	eor	r1, r1
  ce:	e2 0f       	add	r30, r18
  d0:	f1 1d       	adc	r31, r1
  d2:	ee 0f       	add	r30, r30
  d4:	ff 1f       	adc	r31, r31
  d6:	ef 5c       	subi	r30, 0xCF	; 207
  d8:	fe 4f       	sbci	r31, 0xFE	; 254
  da:	80 81       	ld	r24, Z
  dc:	91 81       	ldd	r25, Z+1	; 0x01
  de:	09 2e       	mov	r0, r25
  e0:	00 0c       	add	r0, r0
  e2:	aa 0b       	sbc	r26, r26
  e4:	bb 0b       	sbc	r27, r27
  e6:	84 0f       	add	r24, r20
  e8:	95 1f       	adc	r25, r21
  ea:	a6 1f       	adc	r26, r22
  ec:	b7 1f       	adc	r27, r23
  ee:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <counter1>
  f2:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <counter1+0x1>
  f6:	a0 93 66 01 	sts	0x0166, r26	; 0x800166 <counter1+0x2>
  fa:	b0 93 67 01 	sts	0x0167, r27	; 0x800167 <counter1+0x3>
	//angle1=counter1*0.77;
angle1=counter1*6;
  fe:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <counter1>
 102:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <counter1+0x1>
 106:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <counter1+0x2>
 10a:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <counter1+0x3>
 10e:	ac 01       	movw	r20, r24
 110:	bd 01       	movw	r22, r26
 112:	44 0f       	add	r20, r20
 114:	55 1f       	adc	r21, r21
 116:	66 1f       	adc	r22, r22
 118:	77 1f       	adc	r23, r23
 11a:	84 0f       	add	r24, r20
 11c:	95 1f       	adc	r25, r21
 11e:	a6 1f       	adc	r26, r22
 120:	b7 1f       	adc	r27, r23
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	aa 1f       	adc	r26, r26
 128:	bb 1f       	adc	r27, r27
 12a:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <angle1>
 12e:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <angle1+0x1>
 132:	a0 93 61 01 	sts	0x0161, r26	; 0x800161 <angle1+0x2>
 136:	b0 93 62 01 	sts	0x0162, r27	; 0x800162 <angle1+0x3>

	ABprev1 = AB1;
 13a:	20 93 63 01 	sts	0x0163, r18	; 0x800163 <ABprev1>

}
 13e:	ff 91       	pop	r31
 140:	ef 91       	pop	r30
 142:	bf 91       	pop	r27
 144:	af 91       	pop	r26
 146:	9f 91       	pop	r25
 148:	8f 91       	pop	r24
 14a:	7f 91       	pop	r23
 14c:	6f 91       	pop	r22
 14e:	5f 91       	pop	r21
 150:	4f 91       	pop	r20
 152:	2f 91       	pop	r18
 154:	0f 90       	pop	r0
 156:	0f be       	out	0x3f, r0	; 63
 158:	0f 90       	pop	r0
 15a:	1f 90       	pop	r1
 15c:	18 95       	reti

0000015e <__vector_4>:



ISR(PCINT1_vect)//энкодер  угол отклонения маятника
{
 15e:	1f 92       	push	r1
 160:	0f 92       	push	r0
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	0f 92       	push	r0
 166:	11 24       	eor	r1, r1
 168:	2f 93       	push	r18
 16a:	3f 93       	push	r19
 16c:	4f 93       	push	r20
 16e:	5f 93       	push	r21
 170:	6f 93       	push	r22
 172:	7f 93       	push	r23
 174:	8f 93       	push	r24
 176:	9f 93       	push	r25
 178:	af 93       	push	r26
 17a:	bf 93       	push	r27
 17c:	cf 93       	push	r28
 17e:	ef 93       	push	r30
 180:	ff 93       	push	r31
int8_t AB2 = PINC & 3;
 182:	c6 b1       	in	r28, 0x06	; 6
 184:	c3 70       	andi	r28, 0x03	; 3

counter2 += increment[AB2 + ABprev2*4];
 186:	e0 91 5a 01 	lds	r30, 0x015A	; 0x80015a <ABprev2>
 18a:	40 91 5b 01 	lds	r20, 0x015B	; 0x80015b <counter2>
 18e:	50 91 5c 01 	lds	r21, 0x015C	; 0x80015c <counter2+0x1>
 192:	60 91 5d 01 	lds	r22, 0x015D	; 0x80015d <counter2+0x2>
 196:	70 91 5e 01 	lds	r23, 0x015E	; 0x80015e <counter2+0x3>
 19a:	84 e0       	ldi	r24, 0x04	; 4
 19c:	e8 02       	muls	r30, r24
 19e:	f0 01       	movw	r30, r0
 1a0:	11 24       	eor	r1, r1
 1a2:	ec 0f       	add	r30, r28
 1a4:	f1 1d       	adc	r31, r1
 1a6:	ee 0f       	add	r30, r30
 1a8:	ff 1f       	adc	r31, r31
 1aa:	ef 5c       	subi	r30, 0xCF	; 207
 1ac:	fe 4f       	sbci	r31, 0xFE	; 254
 1ae:	80 81       	ld	r24, Z
 1b0:	91 81       	ldd	r25, Z+1	; 0x01
 1b2:	09 2e       	mov	r0, r25
 1b4:	00 0c       	add	r0, r0
 1b6:	aa 0b       	sbc	r26, r26
 1b8:	bb 0b       	sbc	r27, r27
 1ba:	84 0f       	add	r24, r20
 1bc:	95 1f       	adc	r25, r21
 1be:	a6 1f       	adc	r26, r22
 1c0:	b7 1f       	adc	r27, r23
 1c2:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <counter2>
 1c6:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <counter2+0x1>
 1ca:	a0 93 5d 01 	sts	0x015D, r26	; 0x80015d <counter2+0x2>
 1ce:	b0 93 5e 01 	sts	0x015E, r27	; 0x80015e <counter2+0x3>
angle2=counter2*6;
 1d2:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <counter2>
 1d6:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <counter2+0x1>
 1da:	a0 91 5d 01 	lds	r26, 0x015D	; 0x80015d <counter2+0x2>
 1de:	b0 91 5e 01 	lds	r27, 0x015E	; 0x80015e <counter2+0x3>
 1e2:	ac 01       	movw	r20, r24
 1e4:	bd 01       	movw	r22, r26
 1e6:	44 0f       	add	r20, r20
 1e8:	55 1f       	adc	r21, r21
 1ea:	66 1f       	adc	r22, r22
 1ec:	77 1f       	adc	r23, r23
 1ee:	84 0f       	add	r24, r20
 1f0:	95 1f       	adc	r25, r21
 1f2:	a6 1f       	adc	r26, r22
 1f4:	b7 1f       	adc	r27, r23
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	aa 1f       	adc	r26, r26
 1fc:	bb 1f       	adc	r27, r27
 1fe:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <angle2>
 202:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <angle2+0x1>
 206:	a0 93 58 01 	sts	0x0158, r26	; 0x800158 <angle2+0x2>
 20a:	b0 93 59 01 	sts	0x0159, r27	; 0x800159 <angle2+0x3>

peremeshenie=(dlin_okr*angle2)/360; /* вычисление перемещения тележки относительно началаьного положения в   мм  */
 20e:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <angle2>
 212:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <angle2+0x1>
 216:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <angle2+0x2>
 21a:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <angle2+0x3>
 21e:	82 d1       	rcall	.+772    	; 0x524 <__floatsisf>
 220:	2a e9       	ldi	r18, 0x9A	; 154
 222:	39 e9       	ldi	r19, 0x99	; 153
 224:	4b e1       	ldi	r20, 0x1B	; 27
 226:	52 e4       	ldi	r21, 0x42	; 66
 228:	09 d2       	rcall	.+1042   	; 0x63c <__mulsf3>
 22a:	20 e0       	ldi	r18, 0x00	; 0
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	44 eb       	ldi	r20, 0xB4	; 180
 230:	53 e4       	ldi	r21, 0x43	; 67
 232:	dd d0       	rcall	.+442    	; 0x3ee <__divsf3>
 234:	44 d1       	rcall	.+648    	; 0x4be <__fixsfsi>
 236:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <__data_end>
 23a:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <__data_end+0x1>
 23e:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <__data_end+0x2>
 242:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <__data_end+0x3>


ABprev2 = AB2;	
 246:	c0 93 5a 01 	sts	0x015A, r28	; 0x80015a <ABprev2>
	
	
}
 24a:	ff 91       	pop	r31
 24c:	ef 91       	pop	r30
 24e:	cf 91       	pop	r28
 250:	bf 91       	pop	r27
 252:	af 91       	pop	r26
 254:	9f 91       	pop	r25
 256:	8f 91       	pop	r24
 258:	7f 91       	pop	r23
 25a:	6f 91       	pop	r22
 25c:	5f 91       	pop	r21
 25e:	4f 91       	pop	r20
 260:	3f 91       	pop	r19
 262:	2f 91       	pop	r18
 264:	0f 90       	pop	r0
 266:	0f be       	out	0x3f, r0	; 63
 268:	0f 90       	pop	r0
 26a:	1f 90       	pop	r1
 26c:	18 95       	reti

0000026e <pin_change>:


void pin_change()//настройка прерываний для  обработки  значений с энкодеров
{
	//настройка прерывания Pin Change Interrupt 0
	PCMSK0|=(1<<PCINT0)|(1<<PCINT1);
 26e:	eb e6       	ldi	r30, 0x6B	; 107
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	80 81       	ld	r24, Z
 274:	83 60       	ori	r24, 0x03	; 3
 276:	80 83       	st	Z, r24
	PCICR|=(1<<PCIE0);
 278:	e8 e6       	ldi	r30, 0x68	; 104
 27a:	f0 e0       	ldi	r31, 0x00	; 0
 27c:	80 81       	ld	r24, Z
 27e:	81 60       	ori	r24, 0x01	; 1
 280:	80 83       	st	Z, r24

	//настройка прерывания Pin Change Interrupt 1
	PCMSK1|=(1<<PCINT8)|(1<<PCINT9);
 282:	ac e6       	ldi	r26, 0x6C	; 108
 284:	b0 e0       	ldi	r27, 0x00	; 0
 286:	8c 91       	ld	r24, X
 288:	83 60       	ori	r24, 0x03	; 3
 28a:	8c 93       	st	X, r24
	PCICR|=(1<<PCIE1);
 28c:	80 81       	ld	r24, Z
 28e:	82 60       	ori	r24, 0x02	; 2
 290:	80 83       	st	Z, r24
 292:	08 95       	ret

00000294 <USART_Transmit>:


//Функции работы с УАРТом
void USART_Transmit( char data)
{
	while (!(UCSR0A & (1<<UDRE0)))
 294:	e0 ec       	ldi	r30, 0xC0	; 192
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	90 81       	ld	r25, Z
 29a:	95 ff       	sbrs	r25, 5
 29c:	fd cf       	rjmp	.-6      	; 0x298 <USART_Transmit+0x4>
	;
	
	UDR0=data;//посылка данных по УСАРТ
 29e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__EEPROM_REGION_LENGTH__+0x7f00c6>
 2a2:	08 95       	ret

000002a4 <send_int_Uart>:
	return 0;
}

void send_int_Uart(long c)//    Отправка числа от 0000 до 9999

{
 2a4:	0f 93       	push	r16
 2a6:	1f 93       	push	r17
 2a8:	cf 93       	push	r28
 2aa:	df 93       	push	r29
	
	signed char temp;
	
	c=c%10000;
 2ac:	20 e1       	ldi	r18, 0x10	; 16
 2ae:	37 e2       	ldi	r19, 0x27	; 39
 2b0:	40 e0       	ldi	r20, 0x00	; 0
 2b2:	50 e0       	ldi	r21, 0x00	; 0
 2b4:	26 d2       	rcall	.+1100   	; 0x702 <__divmodsi4>
	
	temp=c/100;
 2b6:	24 e6       	ldi	r18, 0x64	; 100
 2b8:	30 e0       	ldi	r19, 0x00	; 0
 2ba:	40 e0       	ldi	r20, 0x00	; 0
 2bc:	50 e0       	ldi	r21, 0x00	; 0
 2be:	21 d2       	rcall	.+1090   	; 0x702 <__divmodsi4>
 2c0:	02 2f       	mov	r16, r18
 2c2:	16 2f       	mov	r17, r22
	
	USART_Transmit(temp/10+'0');
 2c4:	c7 e6       	ldi	r28, 0x67	; 103
 2c6:	2c 02       	muls	r18, r28
 2c8:	d1 2d       	mov	r29, r1
 2ca:	11 24       	eor	r1, r1
 2cc:	d5 95       	asr	r29
 2ce:	d5 95       	asr	r29
 2d0:	27 fd       	sbrc	r18, 7
 2d2:	d3 95       	inc	r29
 2d4:	80 e3       	ldi	r24, 0x30	; 48
 2d6:	8d 0f       	add	r24, r29
 2d8:	dd df       	rcall	.-70     	; 0x294 <USART_Transmit>
	
	USART_Transmit(temp%10+'0');
 2da:	dd 0f       	add	r29, r29
 2dc:	8d 2f       	mov	r24, r29
 2de:	88 0f       	add	r24, r24
 2e0:	88 0f       	add	r24, r24
 2e2:	d8 0f       	add	r29, r24
 2e4:	80 2f       	mov	r24, r16
 2e6:	8d 1b       	sub	r24, r29
 2e8:	80 5d       	subi	r24, 0xD0	; 208
 2ea:	d4 df       	rcall	.-88     	; 0x294 <USART_Transmit>
	
	temp=c%100;;
	
	USART_Transmit(temp/10+'0');
 2ec:	1c 02       	muls	r17, r28
 2ee:	c1 2d       	mov	r28, r1
 2f0:	11 24       	eor	r1, r1
 2f2:	c5 95       	asr	r28
 2f4:	c5 95       	asr	r28
 2f6:	17 fd       	sbrc	r17, 7
 2f8:	c3 95       	inc	r28
 2fa:	80 e3       	ldi	r24, 0x30	; 48
 2fc:	8c 0f       	add	r24, r28
 2fe:	ca df       	rcall	.-108    	; 0x294 <USART_Transmit>
	
	USART_Transmit(temp%10+'0');
 300:	cc 0f       	add	r28, r28
 302:	8c 2f       	mov	r24, r28
 304:	88 0f       	add	r24, r24
 306:	88 0f       	add	r24, r24
 308:	c8 0f       	add	r28, r24
 30a:	81 2f       	mov	r24, r17
 30c:	8c 1b       	sub	r24, r28
 30e:	80 5d       	subi	r24, 0xD0	; 208
 310:	c1 df       	rcall	.-126    	; 0x294 <USART_Transmit>
	
}
 312:	df 91       	pop	r29
 314:	cf 91       	pop	r28
 316:	1f 91       	pop	r17
 318:	0f 91       	pop	r16
 31a:	08 95       	ret

0000031c <USART_INIT>:


void USART_INIT()
{
	UBRR0H|=0b00000000;
 31c:	e5 ec       	ldi	r30, 0xC5	; 197
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	80 81       	ld	r24, Z
 322:	80 83       	st	Z, r24
	UBRR0L|=0b00011001;
 324:	e4 ec       	ldi	r30, 0xC4	; 196
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	80 81       	ld	r24, Z
 32a:	89 61       	ori	r24, 0x19	; 25
 32c:	80 83       	st	Z, r24
	UCSR0A|=(0<<U2X0);
 32e:	e0 ec       	ldi	r30, 0xC0	; 192
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	80 81       	ld	r24, Z
 334:	80 83       	st	Z, r24
	UCSR0B|=(1<<RXEN0)|(1<<TXEN0);
 336:	e1 ec       	ldi	r30, 0xC1	; 193
 338:	f0 e0       	ldi	r31, 0x00	; 0
 33a:	80 81       	ld	r24, Z
 33c:	88 61       	ori	r24, 0x18	; 24
 33e:	80 83       	st	Z, r24
	UCSR0C|=(0<<UMSEL00)|(0<<UMSEL01)|(0<< UPM00)|(0<< UPM01)|(0<<USBS0);
 340:	e2 ec       	ldi	r30, 0xC2	; 194
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	80 83       	st	Z, r24
	UCSR0C|=( 1<<UCSZ00)|(1<<UCSZ01)|(0<<UCSZ02);
 348:	80 81       	ld	r24, Z
 34a:	86 60       	ori	r24, 0x06	; 6
 34c:	80 83       	st	Z, r24
 34e:	08 95       	ret

00000350 <main>:

int main(void)
{
  //DDRC=(1<<DDC4);
 // PORTC=(1<<PC4);//светодиод горит, оповещая о нормальном ходе работы программы.  
   pin_change();
 350:	8e df       	rcall	.-228    	; 0x26e <pin_change>
   stdout = &mystdout;
 352:	80 e0       	ldi	r24, 0x00	; 0
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <__iob+0x3>
 35a:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <__iob+0x2>
   USART_INIT();
 35e:	de df       	rcall	.-68     	; 0x31c <USART_INIT>
    USART_Transmit("T");
 360:	8e e0       	ldi	r24, 0x0E	; 14
 362:	91 e0       	ldi	r25, 0x01	; 1
 364:	97 df       	rcall	.-210    	; 0x294 <USART_Transmit>
	sei();
 366:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 368:	8f e4       	ldi	r24, 0x4F	; 79
 36a:	93 ec       	ldi	r25, 0xC3	; 195
 36c:	01 97       	sbiw	r24, 0x01	; 1
 36e:	f1 f7       	brne	.-4      	; 0x36c <main+0x1c>
 370:	00 c0       	rjmp	.+0      	; 0x372 <main+0x22>
 372:	00 00       	nop
	
	/* Replace with your application code */
    while (1) 
    {
		_delay_ms(200);
		printf("\n angle1\n");
 374:	80 e1       	ldi	r24, 0x10	; 16
 376:	91 e0       	ldi	r25, 0x01	; 1
 378:	02 d2       	rcall	.+1028   	; 0x77e <puts>
		send_int_Uart(angle1);
 37a:	60 91 5f 01 	lds	r22, 0x015F	; 0x80015f <angle1>
 37e:	70 91 60 01 	lds	r23, 0x0160	; 0x800160 <angle1+0x1>
 382:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <angle1+0x2>
 386:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <angle1+0x3>
 38a:	8c df       	rcall	.-232    	; 0x2a4 <send_int_Uart>
 38c:	8f e4       	ldi	r24, 0x4F	; 79
 38e:	93 ec       	ldi	r25, 0xC3	; 195
 390:	01 97       	sbiw	r24, 0x01	; 1
 392:	f1 f7       	brne	.-4      	; 0x390 <main+0x40>
 394:	00 c0       	rjmp	.+0      	; 0x396 <main+0x46>
 396:	00 00       	nop
		_delay_ms(200);
		
		printf("\n angle2\n");
 398:	89 e1       	ldi	r24, 0x19	; 25
 39a:	91 e0       	ldi	r25, 0x01	; 1
 39c:	f0 d1       	rcall	.+992    	; 0x77e <puts>
		send_int_Uart(angle2);
 39e:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <angle2>
 3a2:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <angle2+0x1>
 3a6:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <angle2+0x2>
 3aa:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <angle2+0x3>
 3ae:	7a df       	rcall	.-268    	; 0x2a4 <send_int_Uart>
 3b0:	8f e4       	ldi	r24, 0x4F	; 79
 3b2:	93 ec       	ldi	r25, 0xC3	; 195
 3b4:	01 97       	sbiw	r24, 0x01	; 1
 3b6:	f1 f7       	brne	.-4      	; 0x3b4 <main+0x64>
 3b8:	00 c0       	rjmp	.+0      	; 0x3ba <main+0x6a>
 3ba:	00 00       	nop
		_delay_ms(200);
		
		printf("\n peremeshenie\n");
 3bc:	82 e2       	ldi	r24, 0x22	; 34
 3be:	91 e0       	ldi	r25, 0x01	; 1
 3c0:	de d1       	rcall	.+956    	; 0x77e <puts>
		send_int_Uart(peremeshenie);
 3c2:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <__data_end>
 3c6:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <__data_end+0x1>
 3ca:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end+0x2>
 3ce:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <__data_end+0x3>
 3d2:	68 df       	rcall	.-304    	; 0x2a4 <send_int_Uart>
 3d4:	8f e4       	ldi	r24, 0x4F	; 79
 3d6:	93 ec       	ldi	r25, 0xC3	; 195
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <main+0x88>
 3dc:	00 c0       	rjmp	.+0      	; 0x3de <main+0x8e>
 3de:	00 00       	nop
 3e0:	8f e4       	ldi	r24, 0x4F	; 79
 3e2:	93 ec       	ldi	r25, 0xC3	; 195
 3e4:	01 97       	sbiw	r24, 0x01	; 1
 3e6:	f1 f7       	brne	.-4      	; 0x3e4 <main+0x94>
 3e8:	00 c0       	rjmp	.+0      	; 0x3ea <main+0x9a>
 3ea:	00 00       	nop
 3ec:	bd cf       	rjmp	.-134    	; 0x368 <main+0x18>

000003ee <__divsf3>:
 3ee:	0c d0       	rcall	.+24     	; 0x408 <__divsf3x>
 3f0:	eb c0       	rjmp	.+470    	; 0x5c8 <__fp_round>
 3f2:	e3 d0       	rcall	.+454    	; 0x5ba <__fp_pscB>
 3f4:	40 f0       	brcs	.+16     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f6:	da d0       	rcall	.+436    	; 0x5ac <__fp_pscA>
 3f8:	30 f0       	brcs	.+12     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fa:	21 f4       	brne	.+8      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fc:	5f 3f       	cpi	r21, 0xFF	; 255
 3fe:	19 f0       	breq	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 400:	cc c0       	rjmp	.+408    	; 0x59a <__fp_inf>
 402:	51 11       	cpse	r21, r1
 404:	15 c1       	rjmp	.+554    	; 0x630 <__fp_szero>
 406:	cf c0       	rjmp	.+414    	; 0x5a6 <__fp_nan>

00000408 <__divsf3x>:
 408:	f0 d0       	rcall	.+480    	; 0x5ea <__fp_split3>
 40a:	98 f3       	brcs	.-26     	; 0x3f2 <__divsf3+0x4>

0000040c <__divsf3_pse>:
 40c:	99 23       	and	r25, r25
 40e:	c9 f3       	breq	.-14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 410:	55 23       	and	r21, r21
 412:	b1 f3       	breq	.-20     	; 0x400 <__LOCK_REGION_LENGTH__>
 414:	95 1b       	sub	r25, r21
 416:	55 0b       	sbc	r21, r21
 418:	bb 27       	eor	r27, r27
 41a:	aa 27       	eor	r26, r26
 41c:	62 17       	cp	r22, r18
 41e:	73 07       	cpc	r23, r19
 420:	84 07       	cpc	r24, r20
 422:	38 f0       	brcs	.+14     	; 0x432 <__divsf3_pse+0x26>
 424:	9f 5f       	subi	r25, 0xFF	; 255
 426:	5f 4f       	sbci	r21, 0xFF	; 255
 428:	22 0f       	add	r18, r18
 42a:	33 1f       	adc	r19, r19
 42c:	44 1f       	adc	r20, r20
 42e:	aa 1f       	adc	r26, r26
 430:	a9 f3       	breq	.-22     	; 0x41c <__divsf3_pse+0x10>
 432:	33 d0       	rcall	.+102    	; 0x49a <__divsf3_pse+0x8e>
 434:	0e 2e       	mov	r0, r30
 436:	3a f0       	brmi	.+14     	; 0x446 <__divsf3_pse+0x3a>
 438:	e0 e8       	ldi	r30, 0x80	; 128
 43a:	30 d0       	rcall	.+96     	; 0x49c <__divsf3_pse+0x90>
 43c:	91 50       	subi	r25, 0x01	; 1
 43e:	50 40       	sbci	r21, 0x00	; 0
 440:	e6 95       	lsr	r30
 442:	00 1c       	adc	r0, r0
 444:	ca f7       	brpl	.-14     	; 0x438 <__divsf3_pse+0x2c>
 446:	29 d0       	rcall	.+82     	; 0x49a <__divsf3_pse+0x8e>
 448:	fe 2f       	mov	r31, r30
 44a:	27 d0       	rcall	.+78     	; 0x49a <__divsf3_pse+0x8e>
 44c:	66 0f       	add	r22, r22
 44e:	77 1f       	adc	r23, r23
 450:	88 1f       	adc	r24, r24
 452:	bb 1f       	adc	r27, r27
 454:	26 17       	cp	r18, r22
 456:	37 07       	cpc	r19, r23
 458:	48 07       	cpc	r20, r24
 45a:	ab 07       	cpc	r26, r27
 45c:	b0 e8       	ldi	r27, 0x80	; 128
 45e:	09 f0       	breq	.+2      	; 0x462 <__divsf3_pse+0x56>
 460:	bb 0b       	sbc	r27, r27
 462:	80 2d       	mov	r24, r0
 464:	bf 01       	movw	r22, r30
 466:	ff 27       	eor	r31, r31
 468:	93 58       	subi	r25, 0x83	; 131
 46a:	5f 4f       	sbci	r21, 0xFF	; 255
 46c:	2a f0       	brmi	.+10     	; 0x478 <__divsf3_pse+0x6c>
 46e:	9e 3f       	cpi	r25, 0xFE	; 254
 470:	51 05       	cpc	r21, r1
 472:	68 f0       	brcs	.+26     	; 0x48e <__divsf3_pse+0x82>
 474:	92 c0       	rjmp	.+292    	; 0x59a <__fp_inf>
 476:	dc c0       	rjmp	.+440    	; 0x630 <__fp_szero>
 478:	5f 3f       	cpi	r21, 0xFF	; 255
 47a:	ec f3       	brlt	.-6      	; 0x476 <__divsf3_pse+0x6a>
 47c:	98 3e       	cpi	r25, 0xE8	; 232
 47e:	dc f3       	brlt	.-10     	; 0x476 <__divsf3_pse+0x6a>
 480:	86 95       	lsr	r24
 482:	77 95       	ror	r23
 484:	67 95       	ror	r22
 486:	b7 95       	ror	r27
 488:	f7 95       	ror	r31
 48a:	9f 5f       	subi	r25, 0xFF	; 255
 48c:	c9 f7       	brne	.-14     	; 0x480 <__divsf3_pse+0x74>
 48e:	88 0f       	add	r24, r24
 490:	91 1d       	adc	r25, r1
 492:	96 95       	lsr	r25
 494:	87 95       	ror	r24
 496:	97 f9       	bld	r25, 7
 498:	08 95       	ret
 49a:	e1 e0       	ldi	r30, 0x01	; 1
 49c:	66 0f       	add	r22, r22
 49e:	77 1f       	adc	r23, r23
 4a0:	88 1f       	adc	r24, r24
 4a2:	bb 1f       	adc	r27, r27
 4a4:	62 17       	cp	r22, r18
 4a6:	73 07       	cpc	r23, r19
 4a8:	84 07       	cpc	r24, r20
 4aa:	ba 07       	cpc	r27, r26
 4ac:	20 f0       	brcs	.+8      	; 0x4b6 <__divsf3_pse+0xaa>
 4ae:	62 1b       	sub	r22, r18
 4b0:	73 0b       	sbc	r23, r19
 4b2:	84 0b       	sbc	r24, r20
 4b4:	ba 0b       	sbc	r27, r26
 4b6:	ee 1f       	adc	r30, r30
 4b8:	88 f7       	brcc	.-30     	; 0x49c <__divsf3_pse+0x90>
 4ba:	e0 95       	com	r30
 4bc:	08 95       	ret

000004be <__fixsfsi>:
 4be:	04 d0       	rcall	.+8      	; 0x4c8 <__fixunssfsi>
 4c0:	68 94       	set
 4c2:	b1 11       	cpse	r27, r1
 4c4:	b5 c0       	rjmp	.+362    	; 0x630 <__fp_szero>
 4c6:	08 95       	ret

000004c8 <__fixunssfsi>:
 4c8:	98 d0       	rcall	.+304    	; 0x5fa <__fp_splitA>
 4ca:	88 f0       	brcs	.+34     	; 0x4ee <__fixunssfsi+0x26>
 4cc:	9f 57       	subi	r25, 0x7F	; 127
 4ce:	90 f0       	brcs	.+36     	; 0x4f4 <__fixunssfsi+0x2c>
 4d0:	b9 2f       	mov	r27, r25
 4d2:	99 27       	eor	r25, r25
 4d4:	b7 51       	subi	r27, 0x17	; 23
 4d6:	a0 f0       	brcs	.+40     	; 0x500 <__stack+0x1>
 4d8:	d1 f0       	breq	.+52     	; 0x50e <__stack+0xf>
 4da:	66 0f       	add	r22, r22
 4dc:	77 1f       	adc	r23, r23
 4de:	88 1f       	adc	r24, r24
 4e0:	99 1f       	adc	r25, r25
 4e2:	1a f0       	brmi	.+6      	; 0x4ea <__fixunssfsi+0x22>
 4e4:	ba 95       	dec	r27
 4e6:	c9 f7       	brne	.-14     	; 0x4da <__fixunssfsi+0x12>
 4e8:	12 c0       	rjmp	.+36     	; 0x50e <__stack+0xf>
 4ea:	b1 30       	cpi	r27, 0x01	; 1
 4ec:	81 f0       	breq	.+32     	; 0x50e <__stack+0xf>
 4ee:	9f d0       	rcall	.+318    	; 0x62e <__fp_zero>
 4f0:	b1 e0       	ldi	r27, 0x01	; 1
 4f2:	08 95       	ret
 4f4:	9c c0       	rjmp	.+312    	; 0x62e <__fp_zero>
 4f6:	67 2f       	mov	r22, r23
 4f8:	78 2f       	mov	r23, r24
 4fa:	88 27       	eor	r24, r24
 4fc:	b8 5f       	subi	r27, 0xF8	; 248
 4fe:	39 f0       	breq	.+14     	; 0x50e <__stack+0xf>
 500:	b9 3f       	cpi	r27, 0xF9	; 249
 502:	cc f3       	brlt	.-14     	; 0x4f6 <__fixunssfsi+0x2e>
 504:	86 95       	lsr	r24
 506:	77 95       	ror	r23
 508:	67 95       	ror	r22
 50a:	b3 95       	inc	r27
 50c:	d9 f7       	brne	.-10     	; 0x504 <__stack+0x5>
 50e:	3e f4       	brtc	.+14     	; 0x51e <__stack+0x1f>
 510:	90 95       	com	r25
 512:	80 95       	com	r24
 514:	70 95       	com	r23
 516:	61 95       	neg	r22
 518:	7f 4f       	sbci	r23, 0xFF	; 255
 51a:	8f 4f       	sbci	r24, 0xFF	; 255
 51c:	9f 4f       	sbci	r25, 0xFF	; 255
 51e:	08 95       	ret

00000520 <__floatunsisf>:
 520:	e8 94       	clt
 522:	09 c0       	rjmp	.+18     	; 0x536 <__floatsisf+0x12>

00000524 <__floatsisf>:
 524:	97 fb       	bst	r25, 7
 526:	3e f4       	brtc	.+14     	; 0x536 <__floatsisf+0x12>
 528:	90 95       	com	r25
 52a:	80 95       	com	r24
 52c:	70 95       	com	r23
 52e:	61 95       	neg	r22
 530:	7f 4f       	sbci	r23, 0xFF	; 255
 532:	8f 4f       	sbci	r24, 0xFF	; 255
 534:	9f 4f       	sbci	r25, 0xFF	; 255
 536:	99 23       	and	r25, r25
 538:	a9 f0       	breq	.+42     	; 0x564 <__floatsisf+0x40>
 53a:	f9 2f       	mov	r31, r25
 53c:	96 e9       	ldi	r25, 0x96	; 150
 53e:	bb 27       	eor	r27, r27
 540:	93 95       	inc	r25
 542:	f6 95       	lsr	r31
 544:	87 95       	ror	r24
 546:	77 95       	ror	r23
 548:	67 95       	ror	r22
 54a:	b7 95       	ror	r27
 54c:	f1 11       	cpse	r31, r1
 54e:	f8 cf       	rjmp	.-16     	; 0x540 <__floatsisf+0x1c>
 550:	fa f4       	brpl	.+62     	; 0x590 <__floatsisf+0x6c>
 552:	bb 0f       	add	r27, r27
 554:	11 f4       	brne	.+4      	; 0x55a <__floatsisf+0x36>
 556:	60 ff       	sbrs	r22, 0
 558:	1b c0       	rjmp	.+54     	; 0x590 <__floatsisf+0x6c>
 55a:	6f 5f       	subi	r22, 0xFF	; 255
 55c:	7f 4f       	sbci	r23, 0xFF	; 255
 55e:	8f 4f       	sbci	r24, 0xFF	; 255
 560:	9f 4f       	sbci	r25, 0xFF	; 255
 562:	16 c0       	rjmp	.+44     	; 0x590 <__floatsisf+0x6c>
 564:	88 23       	and	r24, r24
 566:	11 f0       	breq	.+4      	; 0x56c <__floatsisf+0x48>
 568:	96 e9       	ldi	r25, 0x96	; 150
 56a:	11 c0       	rjmp	.+34     	; 0x58e <__floatsisf+0x6a>
 56c:	77 23       	and	r23, r23
 56e:	21 f0       	breq	.+8      	; 0x578 <__floatsisf+0x54>
 570:	9e e8       	ldi	r25, 0x8E	; 142
 572:	87 2f       	mov	r24, r23
 574:	76 2f       	mov	r23, r22
 576:	05 c0       	rjmp	.+10     	; 0x582 <__floatsisf+0x5e>
 578:	66 23       	and	r22, r22
 57a:	71 f0       	breq	.+28     	; 0x598 <__floatsisf+0x74>
 57c:	96 e8       	ldi	r25, 0x86	; 134
 57e:	86 2f       	mov	r24, r22
 580:	70 e0       	ldi	r23, 0x00	; 0
 582:	60 e0       	ldi	r22, 0x00	; 0
 584:	2a f0       	brmi	.+10     	; 0x590 <__floatsisf+0x6c>
 586:	9a 95       	dec	r25
 588:	66 0f       	add	r22, r22
 58a:	77 1f       	adc	r23, r23
 58c:	88 1f       	adc	r24, r24
 58e:	da f7       	brpl	.-10     	; 0x586 <__floatsisf+0x62>
 590:	88 0f       	add	r24, r24
 592:	96 95       	lsr	r25
 594:	87 95       	ror	r24
 596:	97 f9       	bld	r25, 7
 598:	08 95       	ret

0000059a <__fp_inf>:
 59a:	97 f9       	bld	r25, 7
 59c:	9f 67       	ori	r25, 0x7F	; 127
 59e:	80 e8       	ldi	r24, 0x80	; 128
 5a0:	70 e0       	ldi	r23, 0x00	; 0
 5a2:	60 e0       	ldi	r22, 0x00	; 0
 5a4:	08 95       	ret

000005a6 <__fp_nan>:
 5a6:	9f ef       	ldi	r25, 0xFF	; 255
 5a8:	80 ec       	ldi	r24, 0xC0	; 192
 5aa:	08 95       	ret

000005ac <__fp_pscA>:
 5ac:	00 24       	eor	r0, r0
 5ae:	0a 94       	dec	r0
 5b0:	16 16       	cp	r1, r22
 5b2:	17 06       	cpc	r1, r23
 5b4:	18 06       	cpc	r1, r24
 5b6:	09 06       	cpc	r0, r25
 5b8:	08 95       	ret

000005ba <__fp_pscB>:
 5ba:	00 24       	eor	r0, r0
 5bc:	0a 94       	dec	r0
 5be:	12 16       	cp	r1, r18
 5c0:	13 06       	cpc	r1, r19
 5c2:	14 06       	cpc	r1, r20
 5c4:	05 06       	cpc	r0, r21
 5c6:	08 95       	ret

000005c8 <__fp_round>:
 5c8:	09 2e       	mov	r0, r25
 5ca:	03 94       	inc	r0
 5cc:	00 0c       	add	r0, r0
 5ce:	11 f4       	brne	.+4      	; 0x5d4 <__fp_round+0xc>
 5d0:	88 23       	and	r24, r24
 5d2:	52 f0       	brmi	.+20     	; 0x5e8 <__fp_round+0x20>
 5d4:	bb 0f       	add	r27, r27
 5d6:	40 f4       	brcc	.+16     	; 0x5e8 <__fp_round+0x20>
 5d8:	bf 2b       	or	r27, r31
 5da:	11 f4       	brne	.+4      	; 0x5e0 <__fp_round+0x18>
 5dc:	60 ff       	sbrs	r22, 0
 5de:	04 c0       	rjmp	.+8      	; 0x5e8 <__fp_round+0x20>
 5e0:	6f 5f       	subi	r22, 0xFF	; 255
 5e2:	7f 4f       	sbci	r23, 0xFF	; 255
 5e4:	8f 4f       	sbci	r24, 0xFF	; 255
 5e6:	9f 4f       	sbci	r25, 0xFF	; 255
 5e8:	08 95       	ret

000005ea <__fp_split3>:
 5ea:	57 fd       	sbrc	r21, 7
 5ec:	90 58       	subi	r25, 0x80	; 128
 5ee:	44 0f       	add	r20, r20
 5f0:	55 1f       	adc	r21, r21
 5f2:	59 f0       	breq	.+22     	; 0x60a <__fp_splitA+0x10>
 5f4:	5f 3f       	cpi	r21, 0xFF	; 255
 5f6:	71 f0       	breq	.+28     	; 0x614 <__fp_splitA+0x1a>
 5f8:	47 95       	ror	r20

000005fa <__fp_splitA>:
 5fa:	88 0f       	add	r24, r24
 5fc:	97 fb       	bst	r25, 7
 5fe:	99 1f       	adc	r25, r25
 600:	61 f0       	breq	.+24     	; 0x61a <__fp_splitA+0x20>
 602:	9f 3f       	cpi	r25, 0xFF	; 255
 604:	79 f0       	breq	.+30     	; 0x624 <__fp_splitA+0x2a>
 606:	87 95       	ror	r24
 608:	08 95       	ret
 60a:	12 16       	cp	r1, r18
 60c:	13 06       	cpc	r1, r19
 60e:	14 06       	cpc	r1, r20
 610:	55 1f       	adc	r21, r21
 612:	f2 cf       	rjmp	.-28     	; 0x5f8 <__fp_split3+0xe>
 614:	46 95       	lsr	r20
 616:	f1 df       	rcall	.-30     	; 0x5fa <__fp_splitA>
 618:	08 c0       	rjmp	.+16     	; 0x62a <__fp_splitA+0x30>
 61a:	16 16       	cp	r1, r22
 61c:	17 06       	cpc	r1, r23
 61e:	18 06       	cpc	r1, r24
 620:	99 1f       	adc	r25, r25
 622:	f1 cf       	rjmp	.-30     	; 0x606 <__fp_splitA+0xc>
 624:	86 95       	lsr	r24
 626:	71 05       	cpc	r23, r1
 628:	61 05       	cpc	r22, r1
 62a:	08 94       	sec
 62c:	08 95       	ret

0000062e <__fp_zero>:
 62e:	e8 94       	clt

00000630 <__fp_szero>:
 630:	bb 27       	eor	r27, r27
 632:	66 27       	eor	r22, r22
 634:	77 27       	eor	r23, r23
 636:	cb 01       	movw	r24, r22
 638:	97 f9       	bld	r25, 7
 63a:	08 95       	ret

0000063c <__mulsf3>:
 63c:	0b d0       	rcall	.+22     	; 0x654 <__mulsf3x>
 63e:	c4 cf       	rjmp	.-120    	; 0x5c8 <__fp_round>
 640:	b5 df       	rcall	.-150    	; 0x5ac <__fp_pscA>
 642:	28 f0       	brcs	.+10     	; 0x64e <__mulsf3+0x12>
 644:	ba df       	rcall	.-140    	; 0x5ba <__fp_pscB>
 646:	18 f0       	brcs	.+6      	; 0x64e <__mulsf3+0x12>
 648:	95 23       	and	r25, r21
 64a:	09 f0       	breq	.+2      	; 0x64e <__mulsf3+0x12>
 64c:	a6 cf       	rjmp	.-180    	; 0x59a <__fp_inf>
 64e:	ab cf       	rjmp	.-170    	; 0x5a6 <__fp_nan>
 650:	11 24       	eor	r1, r1
 652:	ee cf       	rjmp	.-36     	; 0x630 <__fp_szero>

00000654 <__mulsf3x>:
 654:	ca df       	rcall	.-108    	; 0x5ea <__fp_split3>
 656:	a0 f3       	brcs	.-24     	; 0x640 <__mulsf3+0x4>

00000658 <__mulsf3_pse>:
 658:	95 9f       	mul	r25, r21
 65a:	d1 f3       	breq	.-12     	; 0x650 <__mulsf3+0x14>
 65c:	95 0f       	add	r25, r21
 65e:	50 e0       	ldi	r21, 0x00	; 0
 660:	55 1f       	adc	r21, r21
 662:	62 9f       	mul	r22, r18
 664:	f0 01       	movw	r30, r0
 666:	72 9f       	mul	r23, r18
 668:	bb 27       	eor	r27, r27
 66a:	f0 0d       	add	r31, r0
 66c:	b1 1d       	adc	r27, r1
 66e:	63 9f       	mul	r22, r19
 670:	aa 27       	eor	r26, r26
 672:	f0 0d       	add	r31, r0
 674:	b1 1d       	adc	r27, r1
 676:	aa 1f       	adc	r26, r26
 678:	64 9f       	mul	r22, r20
 67a:	66 27       	eor	r22, r22
 67c:	b0 0d       	add	r27, r0
 67e:	a1 1d       	adc	r26, r1
 680:	66 1f       	adc	r22, r22
 682:	82 9f       	mul	r24, r18
 684:	22 27       	eor	r18, r18
 686:	b0 0d       	add	r27, r0
 688:	a1 1d       	adc	r26, r1
 68a:	62 1f       	adc	r22, r18
 68c:	73 9f       	mul	r23, r19
 68e:	b0 0d       	add	r27, r0
 690:	a1 1d       	adc	r26, r1
 692:	62 1f       	adc	r22, r18
 694:	83 9f       	mul	r24, r19
 696:	a0 0d       	add	r26, r0
 698:	61 1d       	adc	r22, r1
 69a:	22 1f       	adc	r18, r18
 69c:	74 9f       	mul	r23, r20
 69e:	33 27       	eor	r19, r19
 6a0:	a0 0d       	add	r26, r0
 6a2:	61 1d       	adc	r22, r1
 6a4:	23 1f       	adc	r18, r19
 6a6:	84 9f       	mul	r24, r20
 6a8:	60 0d       	add	r22, r0
 6aa:	21 1d       	adc	r18, r1
 6ac:	82 2f       	mov	r24, r18
 6ae:	76 2f       	mov	r23, r22
 6b0:	6a 2f       	mov	r22, r26
 6b2:	11 24       	eor	r1, r1
 6b4:	9f 57       	subi	r25, 0x7F	; 127
 6b6:	50 40       	sbci	r21, 0x00	; 0
 6b8:	8a f0       	brmi	.+34     	; 0x6dc <__mulsf3_pse+0x84>
 6ba:	e1 f0       	breq	.+56     	; 0x6f4 <__mulsf3_pse+0x9c>
 6bc:	88 23       	and	r24, r24
 6be:	4a f0       	brmi	.+18     	; 0x6d2 <__mulsf3_pse+0x7a>
 6c0:	ee 0f       	add	r30, r30
 6c2:	ff 1f       	adc	r31, r31
 6c4:	bb 1f       	adc	r27, r27
 6c6:	66 1f       	adc	r22, r22
 6c8:	77 1f       	adc	r23, r23
 6ca:	88 1f       	adc	r24, r24
 6cc:	91 50       	subi	r25, 0x01	; 1
 6ce:	50 40       	sbci	r21, 0x00	; 0
 6d0:	a9 f7       	brne	.-22     	; 0x6bc <__mulsf3_pse+0x64>
 6d2:	9e 3f       	cpi	r25, 0xFE	; 254
 6d4:	51 05       	cpc	r21, r1
 6d6:	70 f0       	brcs	.+28     	; 0x6f4 <__mulsf3_pse+0x9c>
 6d8:	60 cf       	rjmp	.-320    	; 0x59a <__fp_inf>
 6da:	aa cf       	rjmp	.-172    	; 0x630 <__fp_szero>
 6dc:	5f 3f       	cpi	r21, 0xFF	; 255
 6de:	ec f3       	brlt	.-6      	; 0x6da <__mulsf3_pse+0x82>
 6e0:	98 3e       	cpi	r25, 0xE8	; 232
 6e2:	dc f3       	brlt	.-10     	; 0x6da <__mulsf3_pse+0x82>
 6e4:	86 95       	lsr	r24
 6e6:	77 95       	ror	r23
 6e8:	67 95       	ror	r22
 6ea:	b7 95       	ror	r27
 6ec:	f7 95       	ror	r31
 6ee:	e7 95       	ror	r30
 6f0:	9f 5f       	subi	r25, 0xFF	; 255
 6f2:	c1 f7       	brne	.-16     	; 0x6e4 <__mulsf3_pse+0x8c>
 6f4:	fe 2b       	or	r31, r30
 6f6:	88 0f       	add	r24, r24
 6f8:	91 1d       	adc	r25, r1
 6fa:	96 95       	lsr	r25
 6fc:	87 95       	ror	r24
 6fe:	97 f9       	bld	r25, 7
 700:	08 95       	ret

00000702 <__divmodsi4>:
 702:	05 2e       	mov	r0, r21
 704:	97 fb       	bst	r25, 7
 706:	16 f4       	brtc	.+4      	; 0x70c <__divmodsi4+0xa>
 708:	00 94       	com	r0
 70a:	0f d0       	rcall	.+30     	; 0x72a <__negsi2>
 70c:	57 fd       	sbrc	r21, 7
 70e:	05 d0       	rcall	.+10     	; 0x71a <__divmodsi4_neg2>
 710:	14 d0       	rcall	.+40     	; 0x73a <__udivmodsi4>
 712:	07 fc       	sbrc	r0, 7
 714:	02 d0       	rcall	.+4      	; 0x71a <__divmodsi4_neg2>
 716:	46 f4       	brtc	.+16     	; 0x728 <__divmodsi4_exit>
 718:	08 c0       	rjmp	.+16     	; 0x72a <__negsi2>

0000071a <__divmodsi4_neg2>:
 71a:	50 95       	com	r21
 71c:	40 95       	com	r20
 71e:	30 95       	com	r19
 720:	21 95       	neg	r18
 722:	3f 4f       	sbci	r19, 0xFF	; 255
 724:	4f 4f       	sbci	r20, 0xFF	; 255
 726:	5f 4f       	sbci	r21, 0xFF	; 255

00000728 <__divmodsi4_exit>:
 728:	08 95       	ret

0000072a <__negsi2>:
 72a:	90 95       	com	r25
 72c:	80 95       	com	r24
 72e:	70 95       	com	r23
 730:	61 95       	neg	r22
 732:	7f 4f       	sbci	r23, 0xFF	; 255
 734:	8f 4f       	sbci	r24, 0xFF	; 255
 736:	9f 4f       	sbci	r25, 0xFF	; 255
 738:	08 95       	ret

0000073a <__udivmodsi4>:
 73a:	a1 e2       	ldi	r26, 0x21	; 33
 73c:	1a 2e       	mov	r1, r26
 73e:	aa 1b       	sub	r26, r26
 740:	bb 1b       	sub	r27, r27
 742:	fd 01       	movw	r30, r26
 744:	0d c0       	rjmp	.+26     	; 0x760 <__udivmodsi4_ep>

00000746 <__udivmodsi4_loop>:
 746:	aa 1f       	adc	r26, r26
 748:	bb 1f       	adc	r27, r27
 74a:	ee 1f       	adc	r30, r30
 74c:	ff 1f       	adc	r31, r31
 74e:	a2 17       	cp	r26, r18
 750:	b3 07       	cpc	r27, r19
 752:	e4 07       	cpc	r30, r20
 754:	f5 07       	cpc	r31, r21
 756:	20 f0       	brcs	.+8      	; 0x760 <__udivmodsi4_ep>
 758:	a2 1b       	sub	r26, r18
 75a:	b3 0b       	sbc	r27, r19
 75c:	e4 0b       	sbc	r30, r20
 75e:	f5 0b       	sbc	r31, r21

00000760 <__udivmodsi4_ep>:
 760:	66 1f       	adc	r22, r22
 762:	77 1f       	adc	r23, r23
 764:	88 1f       	adc	r24, r24
 766:	99 1f       	adc	r25, r25
 768:	1a 94       	dec	r1
 76a:	69 f7       	brne	.-38     	; 0x746 <__udivmodsi4_loop>
 76c:	60 95       	com	r22
 76e:	70 95       	com	r23
 770:	80 95       	com	r24
 772:	90 95       	com	r25
 774:	9b 01       	movw	r18, r22
 776:	ac 01       	movw	r20, r24
 778:	bd 01       	movw	r22, r26
 77a:	cf 01       	movw	r24, r30
 77c:	08 95       	ret

0000077e <puts>:
 77e:	0f 93       	push	r16
 780:	1f 93       	push	r17
 782:	cf 93       	push	r28
 784:	df 93       	push	r29
 786:	e0 91 6a 01 	lds	r30, 0x016A	; 0x80016a <__iob+0x2>
 78a:	f0 91 6b 01 	lds	r31, 0x016B	; 0x80016b <__iob+0x3>
 78e:	23 81       	ldd	r18, Z+3	; 0x03
 790:	21 ff       	sbrs	r18, 1
 792:	1b c0       	rjmp	.+54     	; 0x7ca <puts+0x4c>
 794:	8c 01       	movw	r16, r24
 796:	d0 e0       	ldi	r29, 0x00	; 0
 798:	c0 e0       	ldi	r28, 0x00	; 0
 79a:	f8 01       	movw	r30, r16
 79c:	81 91       	ld	r24, Z+
 79e:	8f 01       	movw	r16, r30
 7a0:	60 91 6a 01 	lds	r22, 0x016A	; 0x80016a <__iob+0x2>
 7a4:	70 91 6b 01 	lds	r23, 0x016B	; 0x80016b <__iob+0x3>
 7a8:	db 01       	movw	r26, r22
 7aa:	18 96       	adiw	r26, 0x08	; 8
 7ac:	ed 91       	ld	r30, X+
 7ae:	fc 91       	ld	r31, X
 7b0:	19 97       	sbiw	r26, 0x09	; 9
 7b2:	88 23       	and	r24, r24
 7b4:	31 f0       	breq	.+12     	; 0x7c2 <puts+0x44>
 7b6:	09 95       	icall
 7b8:	89 2b       	or	r24, r25
 7ba:	79 f3       	breq	.-34     	; 0x79a <puts+0x1c>
 7bc:	df ef       	ldi	r29, 0xFF	; 255
 7be:	cf ef       	ldi	r28, 0xFF	; 255
 7c0:	ec cf       	rjmp	.-40     	; 0x79a <puts+0x1c>
 7c2:	8a e0       	ldi	r24, 0x0A	; 10
 7c4:	09 95       	icall
 7c6:	89 2b       	or	r24, r25
 7c8:	19 f0       	breq	.+6      	; 0x7d0 <puts+0x52>
 7ca:	8f ef       	ldi	r24, 0xFF	; 255
 7cc:	9f ef       	ldi	r25, 0xFF	; 255
 7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <puts+0x56>
 7d0:	8d 2f       	mov	r24, r29
 7d2:	9c 2f       	mov	r25, r28
 7d4:	df 91       	pop	r29
 7d6:	cf 91       	pop	r28
 7d8:	1f 91       	pop	r17
 7da:	0f 91       	pop	r16
 7dc:	08 95       	ret

000007de <_exit>:
 7de:	f8 94       	cli

000007e0 <__stop_program>:
 7e0:	ff cf       	rjmp	.-2      	; 0x7e0 <__stop_program>
